// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20220623175438_addrefreshtoken")]
    partial class addrefreshtoken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserForeignKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserForeignKey");

                    b.ToTable("Photo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsMain = true,
                            PublicId = "1",
                            Url = "https://randomuser.me/api/portraits/women/54.jpg",
                            UserForeignKey = 1
                        },
                        new
                        {
                            Id = 2,
                            IsMain = true,
                            PublicId = "2",
                            Url = "https://randomuser.me/api/portraits/women/14.jpg",
                            UserForeignKey = 2
                        },
                        new
                        {
                            Id = 3,
                            IsMain = true,
                            PublicId = "3",
                            Url = "https://randomuser.me/api/portraits/women/15.jpg",
                            UserForeignKey = 3
                        },
                        new
                        {
                            Id = 4,
                            IsMain = true,
                            PublicId = "4",
                            Url = "https://randomuser.me/api/portraits/women/16.jpg",
                            UserForeignKey = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = " HN",
                            Country = "VN",
                            Created = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1488),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bachduyhoang2k@gmail.com",
                            FullName = "Bach Duy Hoang",
                            Gender = "female",
                            Interests = "Gym",
                            Introduction = "I'm an extrovert person",
                            LastActive = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1496),
                            LookingFor = "New Challengers",
                            PasswordHash = new byte[] { 104, 9, 26, 221, 188, 30, 30, 244, 234, 17, 72, 213, 85, 136, 128, 131, 47, 148, 30, 8, 174, 60, 203, 75, 48, 47, 77, 199, 167, 91, 212, 85, 219, 176, 248, 80, 119, 51, 185, 93, 202, 153, 142, 188, 228, 133, 20, 99, 124, 222, 149, 151, 230, 162, 240, 90, 87, 245, 209, 3, 24, 231, 112, 129 },
                            PasswordSalt = new byte[] { 10, 27, 128, 63, 137, 240, 236, 31, 111, 200, 15, 186, 3, 21, 167, 113, 219, 139, 43, 85, 171, 125, 176, 46, 143, 208, 123, 6, 253, 207, 71, 9, 118, 94, 151, 111, 120, 60, 179, 33, 196, 226, 71, 99, 59, 88, 143, 252, 54, 205, 168, 244, 89, 118, 88, 127, 241, 8, 171, 197, 240, 60, 49, 178, 183, 191, 21, 75, 189, 6, 98, 143, 118, 203, 117, 127, 180, 95, 65, 134, 154, 160, 27, 70, 78, 49, 238, 186, 123, 156, 177, 107, 107, 141, 229, 69, 9, 90, 249, 180, 38, 90, 116, 85, 24, 194, 252, 22, 187, 131, 229, 31, 88, 10, 4, 105, 121, 113, 97, 25, 239, 84, 99, 12, 160, 132, 218, 91 },
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            City = " HN",
                            Country = "VN",
                            Created = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1541),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "string@gmail.com",
                            FullName = "Nguyen Van A",
                            Gender = "female",
                            Interests = "Gym",
                            Introduction = "I'm an extrovert person",
                            LastActive = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1541),
                            LookingFor = "New Challengers",
                            PasswordHash = new byte[] { 104, 9, 26, 221, 188, 30, 30, 244, 234, 17, 72, 213, 85, 136, 128, 131, 47, 148, 30, 8, 174, 60, 203, 75, 48, 47, 77, 199, 167, 91, 212, 85, 219, 176, 248, 80, 119, 51, 185, 93, 202, 153, 142, 188, 228, 133, 20, 99, 124, 222, 149, 151, 230, 162, 240, 90, 87, 245, 209, 3, 24, 231, 112, 129 },
                            PasswordSalt = new byte[] { 10, 27, 128, 63, 137, 240, 236, 31, 111, 200, 15, 186, 3, 21, 167, 113, 219, 139, 43, 85, 171, 125, 176, 46, 143, 208, 123, 6, 253, 207, 71, 9, 118, 94, 151, 111, 120, 60, 179, 33, 196, 226, 71, 99, 59, 88, 143, 252, 54, 205, 168, 244, 89, 118, 88, 127, 241, 8, 171, 197, 240, 60, 49, 178, 183, 191, 21, 75, 189, 6, 98, 143, 118, 203, 117, 127, 180, 95, 65, 134, 154, 160, 27, 70, 78, 49, 238, 186, 123, 156, 177, 107, 107, 141, 229, 69, 9, 90, 249, 180, 38, 90, 116, 85, 24, 194, 252, 22, 187, 131, 229, 31, 88, 10, 4, 105, 121, 113, 97, 25, 239, 84, 99, 12, 160, 132, 218, 91 },
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            City = " HN",
                            Country = "VN",
                            Created = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1553),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "string1@gmail.com",
                            FullName = "Bach Duy Hoang",
                            Gender = "female",
                            Interests = "Gym",
                            Introduction = "I'm an extrovert person",
                            LastActive = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1554),
                            LookingFor = "New Challengers",
                            PasswordHash = new byte[] { 104, 9, 26, 221, 188, 30, 30, 244, 234, 17, 72, 213, 85, 136, 128, 131, 47, 148, 30, 8, 174, 60, 203, 75, 48, 47, 77, 199, 167, 91, 212, 85, 219, 176, 248, 80, 119, 51, 185, 93, 202, 153, 142, 188, 228, 133, 20, 99, 124, 222, 149, 151, 230, 162, 240, 90, 87, 245, 209, 3, 24, 231, 112, 129 },
                            PasswordSalt = new byte[] { 10, 27, 128, 63, 137, 240, 236, 31, 111, 200, 15, 186, 3, 21, 167, 113, 219, 139, 43, 85, 171, 125, 176, 46, 143, 208, 123, 6, 253, 207, 71, 9, 118, 94, 151, 111, 120, 60, 179, 33, 196, 226, 71, 99, 59, 88, 143, 252, 54, 205, 168, 244, 89, 118, 88, 127, 241, 8, 171, 197, 240, 60, 49, 178, 183, 191, 21, 75, 189, 6, 98, 143, 118, 203, 117, 127, 180, 95, 65, 134, 154, 160, 27, 70, 78, 49, 238, 186, 123, 156, 177, 107, 107, 141, 229, 69, 9, 90, 249, 180, 38, 90, 116, 85, 24, 194, 252, 22, 187, 131, 229, 31, 88, 10, 4, 105, 121, 113, 97, 25, 239, 84, 99, 12, 160, 132, 218, 91 },
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            City = " HN",
                            Country = "VN",
                            Created = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1564),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "string2@gmail.com",
                            FullName = "Bach Duy Hoang",
                            Gender = "female",
                            Interests = "Gym",
                            Introduction = "I'm an extrovert person",
                            LastActive = new DateTime(2022, 6, 24, 0, 54, 38, 276, DateTimeKind.Local).AddTicks(1565),
                            LookingFor = "New Challengers",
                            PasswordHash = new byte[] { 104, 9, 26, 221, 188, 30, 30, 244, 234, 17, 72, 213, 85, 136, 128, 131, 47, 148, 30, 8, 174, 60, 203, 75, 48, 47, 77, 199, 167, 91, 212, 85, 219, 176, 248, 80, 119, 51, 185, 93, 202, 153, 142, 188, 228, 133, 20, 99, 124, 222, 149, 151, 230, 162, 240, 90, 87, 245, 209, 3, 24, 231, 112, 129 },
                            PasswordSalt = new byte[] { 10, 27, 128, 63, 137, 240, 236, 31, 111, 200, 15, 186, 3, 21, 167, 113, 219, 139, 43, 85, 171, 125, 176, 46, 143, 208, 123, 6, 253, 207, 71, 9, 118, 94, 151, 111, 120, 60, 179, 33, 196, 226, 71, 99, 59, 88, 143, 252, 54, 205, 168, 244, 89, 118, 88, 127, 241, 8, 171, 197, 240, 60, 49, 178, 183, 191, 21, 75, 189, 6, 98, 143, 118, 203, 117, 127, 180, 95, 65, 134, 154, 160, 27, 70, 78, 49, 238, 186, 123, 156, 177, 107, 107, 141, 229, 69, 9, 90, 249, 180, 38, 90, 116, 85, 24, 194, 252, 22, 187, 131, 229, 31, 88, 10, 4, 105, 121, 113, 97, 25, 239, 84, 99, 12, 160, 132, 218, 91 },
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Photo", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
